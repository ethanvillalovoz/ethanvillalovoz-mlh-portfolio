name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: "Run Tests"
    runs-on: ubuntu-latest
    env:
      TESTING: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.3'
      
      - name: Setup Python Virtual Environment
        run: python -m venv venv
      
      - name: Install Dependencies
        run: venv/bin/pip install -r requirements.txt
      
      - name: Run Tests
        run: ./run_test.sh
        
  deploy:
    needs: test
    name: "Deploy to VPS"
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Deploy site
        id: deploy
        run: ssh my-vps '~/redeploy-site.sh'
        
      - name: Print Container Status
        run: ssh my-vps 'cd /opt/ethanvillalovoz-mlh-portfolio && sudo docker ps || echo "Unable to get container status"'
        
      - name: Send Success Notification to Discord
        if: success()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -H "Content-Type: application/json" \
            -d '{
              "content": "ðŸš€ Deployment Successful",
              "embeds": [{
                "title": "Portfolio Site Deployed",
                "description": "The portfolio site has been successfully deployed to the VPS",
                "color": 5814783
              }]
            }'
            
  notify-failure:
    needs: [test, deploy]
    if: failure()
    name: "Notify Deployment Failure"
    runs-on: ubuntu-latest
    steps:
      - name: Send Failure Notification to Discord
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -H "Content-Type: application/json" \
            -d '{
              "content": "ðŸš¨ Deployment Failed",
              "embeds": [{
                "title": "Deployment Failure",
                "description": "There was an error during the deployment process. Please check the GitHub Actions logs.",
                "color": 15158332
              }]
            }'